<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.ComplainEntityMapper">
  <resultMap id="BaseResultMap" type="com.community.entity.ComplainEntity">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="user_feedback" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_score" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="Complain" type="com.community.entity.ComplainEntity">
      <id column="id" javaType="java.lang.Integer" property="id" />
      <result column="user_id" javaType="java.lang.Integer" property="user_id" />
      <result column="content" javaType="java.lang.String" property="content" />
      <result column="create_time" javaType="java.util.Date" property="create_time" />
      <result column="user_feedback" javaType="java.lang.String" property="user_feedback" />
      <result column="user_score" javaType="java.lang.Integer" property="user_score" />
      <result column="status" javaType="java.lang.Integer" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, content, create_time, user_feedback, user_score, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from complain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.community.entity.ComplainEntity">
    insert into complain (id, user_id, content, 
      create_time, user_feedback, user_score, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{userFeedback,jdbcType=VARCHAR}, #{userScore,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.community.entity.ComplainEntity">
    insert into complain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userFeedback != null">
        user_feedback,
      </if>
      <if test="userScore != null">
        user_score,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="userFeedback != null">
        #{userFeedback,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        #{userScore,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.entity.ComplainEntity">
    update complain
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="userFeedback != null">
        user_feedback = #{userFeedback,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        user_score = #{userScore,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.entity.ComplainEntity">
    update complain
    set user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      user_feedback = #{userFeedback,jdbcType=VARCHAR},
      user_score = #{userScore,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>