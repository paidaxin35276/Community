<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.NoticeEntityMapper">
  <resultMap id="BaseResultMap" type="com.community.entity.NoticeEntity">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="notice" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="rnotice_object" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="create_who" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="isDelete" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, notice, rnotice_object, create_time, create_who, isDelete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.community.entity.NoticeEntity">
    insert into notice (id, notice, rnotice_object, 
      create_time, create_who, isDelete
      )
    values (#{id,jdbcType=INTEGER}, #{notice,jdbcType=VARCHAR}, #{rnoticeObject,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{createWho,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.community.entity.NoticeEntity">
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="rnoticeObject != null">
        rnotice_object,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createWho != null">
        create_who,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="rnoticeObject != null">
        #{rnoticeObject,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="createWho != null">
        #{createWho,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.entity.NoticeEntity">
    update notice
    <set>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="rnoticeObject != null">
        rnotice_object = #{rnoticeObject,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="createWho != null">
        create_who = #{createWho,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.entity.NoticeEntity">
    update notice
    set notice = #{notice,jdbcType=VARCHAR},
      rnotice_object = #{rnoticeObject,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      create_who = #{createWho,jdbcType=INTEGER},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>